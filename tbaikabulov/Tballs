import tkinter
import sys
import random
import math
WIDTH=900
HEIGHT=750
w,h=WIDTH,HEIGHT
FPS = 100
g=0
G=10000
ko=200
HOLE_FILL='black'
FIELD_COLOR='green'
BORDER_COLOR='dark green'
class Ball:
    def __init__(self,x,y,vx,vy,m,R,fill):
        self.x=x
        self.y=y
        self.vx=vx
        self.vy=vy
        self.m=m
        self.fill=fill
        self.R=R
class rope:
    def __init__(self,l,B1,B2):
            self.l=l
            self.B1=B1
            self.B2=B2
class spoke:
    def __init__(self,x1,y1,x2,y2,Balls):
                self.x1=x1
                self.y1=y1
                self.x2=x2
                self.y2=y2
                self.Balls=Balls
def draw_field(canvas,game):
    canvas.delete(*canvas.find_all())
    canvas.create_rectangle(0,0,WIDTH, HEIGHT, fill=BORDER_COLOR)
    canvas.create_rectangle(5,5,WIDTH-5, HEIGHT-5, fill=FIELD_COLOR)
    for i in game:
        canvas.create_oval(i.x-i.R,i.y-i.R,i.x+i.R,i.y+i.R, fill=i.fill)
    for i in Rope:
        canvas.create_line(i.B1.x,i.B1.y,i.B2.x,i.B2.y, width=2)
    for i in Spoke:
        canvas.create_line(i.x1,i.y1,i.x2,i.y2, width=1)
def change(v0,m0,v1,m1):
    u0=(2*m1*v1+v0*(m0-m1))/(m0+m1)
    u1=(2*m0*v0+v1*(m1-m0))/(m0+m1)
    return(u0,u1)
def change2(vx,vy,ux,uy,cos,sin,m1,m2):
    ix=-(vy*cos-vx*sin)*sin+change(vy*sin+vx*cos,m1,uy*sin+ux*cos,m2)[0]*cos
    iy=(vy*cos-vx*sin)*cos+change(vy*sin+vx*cos,m1,uy*sin+ux*cos,m2)[0]*sin
    jx=-(uy*cos-ux*sin)*sin+change(vy*sin+vx*cos,m1,uy*sin+ux*cos,m2)[1]*cos
    jy=(uy*cos-ux*sin)*cos+change(vy*sin+vx*cos,m1,uy*sin+ux*cos,m2)[1]*sin
    return(ix,iy,jx,jy)  
def distance (x1,y1,x2,y2):
    return ((x1-x2)**2+(y1-y2)**2)**0.5

def make_move(game):
    global Game
    global k
    global Tetsin
    global Tetcos
    global Tet
    for i in Game:
        i.vy+=g
    for i in Rope:
        if distance(i.B1.x+i.B1.vx,i.B1.y+i.B1.vy,i.B2.x+i.B2.vx,i.B2.y+i.B2.vy)>i.l:
            cos=(i.B2.x-i.B1.x)/distance(i.B1.x,i.B1.y,i.B2.x,i.B2.y)
            sin=(i.B2.y-i.B1.y)/distance(i.B1.x,i.B1.y,i.B2.x,i.B2.y)
            T=distance(i.B1.x+i.B1.vx,i.B1.y+i.B1.vy,i.B2.x+i.B2.vx,i.B2.y+i.B2.vy)/10
            i.B1.vx+=T*cos/i.B1.m
            i.B1.vy+=T*sin/i.B1.m
            i.B2.vx-=T*cos/i.B2.m
            i.B2.vy-=T*sin/i.B2.m
    for i in game:
        if not i.R<i.x+i.vx<WIDTH-i.R:
            i.vx=-i.vx
        if not i.R<i.y+i.vy<HEIGHT-i.R:
            i.vy=-i.vy
    for i in game:
        for j in game:
            if i!=j:
                #print(distance(i.x,i.y,j.x,j.y))
                if distance(i.x+i.vx,i.y+i.vy,j.x+j.vx,j.y+j.vy)<=(i.R+j.R)*1.01 and 1==2:
                    k=distance(i.x,i.y,j.x,j.y)
                    change=change2(i.vx,i.vy,j.vx,j.vy,(j.x-i.x)/k,(j.y-i.y)/k,i.m,j.m)
                    i.vx,i.vy,j.vx,j.vy=change[0],change[1],change[2],change[3]                 
    for i in Spoke:
        for j in i.Balls:
            cos=(i.x2-i.x1)/distance(i.x1,i.y1,i.x2,i.y2)
            sin=(i.y2-i.y1)/distance(i.x1,i.y1,i.x2,i.y2)
            ux=j.vx*cos*cos+j.vy*sin*cos
            uy=j.vy*sin*sin+j.vx*cos*sin
            j.vx,j.vy=ux,uy
    for i in Game:
        for j in Game:
            if i!=j:
                d=distance(i.x,i.y,j.x,j.y)
                cos=(j.x-i.x)/d
                sin=(i.y-j.y)/d
                F=G*i.m*j.m/d**2/2
                if F>5:
                    F=5
                i.vx+=F*cos/i.m/ko
                i.vy-=F*sin/i.m/ko
                j.vx-=F*cos/j.m/ko
                j.vy+=F*sin/j.m/ko
    for i in game:
        
        i.x+=i.vx/ko
        i.y+=i.vy/ko
    E=sum([(i.vx**2+i.vy**2)*i.m/2+i.m*g*(HEIGHT-i.y) for i in Game])
    #print(E)
if __name__ == "__main__":
    c = tkinter.Canvas(width=WIDTH-2, height=HEIGHT-2)
    c.pack()
    c.focus_set()
def loop():
    global Game
    draw_field(c, Game)
    for i in range(ko):
        make_move(Game)
    c.after(1000// FPS, loop)
a=3
A=Ball(w/2,h/2-100,                 a,0,1,6,'red')
B=Ball(w/2,h/2+100,              -a,0,1,6,'blue')
C=Ball(w/2+100,h/2,               a,0,1,6,'white')
D=Ball(w/2-100,500,                 0,-a,1,20,'orange')
Rope1=rope(300,A,B)
Rope2=rope(100,D,C)
Spoke1=spoke(0,0,1000,200,[A])
Spoke2=spoke(7500,4000,0,0,[C])
Spoke3=spoke(0,700,1000,0,[D])
Spoke=[]
Rope=[]
Game = [A,B]
loop()
c.mainloop()
